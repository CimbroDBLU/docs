@*@model dblu.Portale.Plugin.Docs.ViewModels.EditorAllegatoViewModel*@
@inject dblu.Portale.Plugin.Docs.Services.ZipService _zipSer
@inject dblu.Portale.Plugin.Docs.Services.AllegatiService _doc
@inject dblu.Portale.Services.Camunda.CamundaService  _service

@using Kendo.Mvc.UI
@using dblu.Docs.Classi
@using dblu.Docs.Models
@using dblu.Portale.Extensions
@using System.Linq
@using dblu.Portale.Plugin.Docs.ViewModels
@addTagHelper *, Kendo.Mvc
@addTagHelper "*, Syncfusion.EJ2"


@{
    var fromTask = false;
    var taskId = "";
    Allegati Allegato = null;
    string idAllegato= null;
    bool flAnnulla = false;
    var flRuoliCandidati = false;
    string[] vRuoliCandidati = null;

    try
    {
        if (Model.GetType() == typeof(Allegati))
        {
            Allegato = Model;
        }
        else
        {
            BPMClient.BPMTaskDto task = TempData.Get<BPMClient.BPMTaskDto>("task");
            BPMClient.BPMVariable var = new BPMClient.BPMVariable();
            Dictionary<string, BPMClient.VariableValue> variables = var.GetAll(_service._eng, task.id).Result;
            idAllegato = variables["_IdAllegato"].value.ToString();
            Allegato = _doc._allMan.Get(idAllegato);
            taskId = task.id;
            fromTask = true;
            flAnnulla = variables.ContainsKey("_Annulla");

            flRuoliCandidati = variables.ContainsKey("_RuoliCandidati");
            if (flRuoliCandidati)
            {
                vRuoliCandidati = variables["_RuoliCandidati"].value.ToString().Split(",");
                flRuoliCandidati = vRuoliCandidati.Length > 0;
            }
        }
    }
    catch (Exception)
    {
        //BPMClient.BPMTaskDto task = TempData.Get<BPMClient.BPMTaskDto>("task");
        //BPMClient.BPMVariable var = new BPMClient.BPMVariable();
        //Dictionary<string, BPMClient.VariableValue> variables = var.GetAll(_service._eng, task.id).Result;
        //var idElemento = variables["IdElemento"].value.ToString();
        //Elemento = _doc._elmMan.Get(idElemento, 0);

    }

    ViewBag.Title = "Allegato";
   
    var AttributiMod = "";
    //IList<EmailAttachments> ListaFile = await _zipSer.GetZipFilesAsync(idAllegato);
    bool isEdit = false;
    //cerco almeno un attributo modificabile
    if (Allegato != null)
    {
        foreach (var attributo in Allegato.elencoAttributi.ToList())
        {
            if (attributo.Visibilità == dblu.Docs.Classi.Visibilita_Attributi.EDITABLE)
            {
                isEdit = true;
                AttributiMod += attributo.Nome + ";";
            }
        }
    }

}

<script type="text/javascript">
    kendo.culture("it-IT");
</script>


@* Syncfusion Essential JS 2 Styles
<link rel="stylesheet" href="https://cdn.syncfusion.com/ej2/material.css" />
*@
@* Syncfusion Essential JS 2 Scripts
<script src="https://cdn.syncfusion.com/ej2/dist/ej2.min.js"></script>
*@
<script src="~/Scripts/dblupdf.js"></script>

<script>

   
    $(document).ready(function () {

        //$("#pdfviewer_comment").remove();
        var pdfViewer = document.getElementById('pdfviewer').ej2_instances[0];
        pdfViewer.stickyNotesSettings.author = '@User.Identity.Name' //'@User.Identity.Name.Replace('.', ' ')';
        pdfViewer.strikethroughSettings.author = '@User.Identity.Name';
        pdfViewer.underlineSettings.author = '@User.Identity.Name';
        pdfViewer.highlightSettings.author = '@User.Identity.Name';
        pdfViewer.annotationSettings.author = '@User.Identity.Name';
        pdfViewer.freeTextSettings.author = '@User.Identity.Name';
    });

    function importAnnotations() {

        var emailpdfviewer = document.getElementById('pdfviewer').ej2_instances[0];
        emailpdfviewer.importAnnotation('');
    }

    function annotationAdd(e) {
        // alert("The signature is added to the PDF document successfully");
    }


    function saveAnnotations() {

        var emailpdfviewer = document.getElementById('pdfviewer').ej2_instances[0];
        emailpdfviewer.exportAnnotation();
    }

    function documentLoaded(args) {
        //alert("The document" + args.fileName + "is ready to view");
        importAnnotations()
    }
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.2.2/pdf.js"></script>
<script>
    window.pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.2.2/pdf.worker.js';
</script>

<style>

    html body #pdfviewer {
        width: 100% !important;
    }
</style>

<script>
    function RuoliCandidati_OnChange() {
        var multiselect = $("#_ms_RuoliCandidati").data("kendoMultiSelect")
        $("#zRuoliCandidati").val(multiselect.value().join(","));
    }

    /*function UtentiCandidati_OnChange() {
        var multiselect = $("#_ms_UtentiCandidati").data("kendoMultiSelect")
        $("#zUtentiCandidati").val(multiselect.value().join(","));
    }*/
</script>

<script>

    function getAllegato() {
        return {
            IdAllegato: '@Allegato.Id'
        };
    }

    function Files_OnRowSelect(arg) {

        var data = this.dataItem(this.select());

        var dataItem = this.dataItem(this.select());
        if (dataItem != null) {

            var IdAllegato = '@Allegato.Id';
            var nome = dataItem.NomeFile.toLowerCase();
            var pdfViewer = document.getElementById('pdfviewer').ej2_instances[0];

            var param = "editor;" + IdAllegato + ";" + nome;

            if (nome.indexOf(".pdf") > 0) {
                pdfViewer.load(param);
                pdfViewer.downloadFileName = nome;
            }
            else {
                pdfViewer.load('');
            }
        }
    }

    function ScaricaFile(e) {
        e.preventDefault();
        var data = this.dataItem($(e.currentTarget).closest("tr"));
        var nomefile = data.NomeFile;
        //var idAllegato = $("#IdAllegato").val()
        var idAllegato = '@Allegato.Id.ToString()';
        var obj = {
            IdAllegato: idAllegato,
            NomeFile: nomefile
        }
        $.ajax( {
            url: '@Url.Action("ApriFile","Allegato" )',
            method: 'GET',
            xhrFields: {
                responseType: 'blob'
            },
            data: obj,
            success: function (data) {
                var a = document.createElement('a');
                var url = window.URL.createObjectURL(data);
                a.href = url;
                a.download = nomefile;
                document.body.append(a);
                a.click();
                a.remove();
                window.URL.revokeObjectURL(url);
                }
        });
    }


    function EliminaFile(e) {
        e.preventDefault();
        var data = this.dataItem($(e.currentTarget).closest("tr"));
        var nomefile = data.NomeFile;
        //var idAllegato = $("#IdAllegato").val()
        var idAllegato = '@Allegato.Id.ToString()';
        var obj = {
            IdAllegato: idAllegato,
            NomeFile: nomefile
        }
        $.ajax( {
            url: '@Url.Action("EliminaFileDaZip", "Allegato" )',
            method: 'POST',
            data: obj,
            success: function (data) {
                var grid = $("#gridFiles").data("kendoGrid")
                grid.dataSource.read();
            },
             error: function (data) {
                alert(data);
            }
        });
    }


    function SubmitForm(frm, caller) {
        caller.preventDefault();

        var fdata = new FormData();
        var file = $("#files")[0].files[0];

        fdata.append("files", file);
        fdata.append("IdAllegato", '@Allegato.Id.ToString()');

        $.ajax(
            {
                type: "POST",
                data: fdata,
                url: '@(Url.Action("AddFileToZip", "Allegato"))',
                processData: false,
                contentType: false,
                success: function (data) {
                    $("#gridFiles").data("kendoGrid").dataSource.read();

                },
                error: function (data) {
                    alert(data);
                }
            });
    }

    function AnnullaOnClick(e) {

        var r = confirm("Confermi l'annullamento del documento?");
        if (r == true) {
            var obj = {
                IdTask: '@taskId',
                IdAllegato: '@idAllegato'
            };
            $.ajax({
                url: '@Url.Action("AnnullaZip", "Allegato" )',
                type: 'POST',
                cache: false,
                data: obj,
                success: function (data) {
                  //  alert();
                   window.location = "/Action/ListaAttivita";
                },
                error: function (data) {
                    alert("Annullamento non riuscito.");
                }
            });

        } else {
            e.preventDefault;
        }
    }



    function SalvaAttributi(caller) {
        caller.preventDefault();

        var frm = $("#formAttributi");
        var obj = {
            IdAllegato: '@idAllegato',
            form: frm.serialize()
        };
        $.ajax(
            {
                url: '@(Url.Action("SalvaAttributi", "Allegato"))',
                type: 'POST',
                cache: false,
                data:obj ,
                success: function (data) {
                   // alert("Ok");
                },
                error: function (data) {
                    alert(data);
                }
            });
    }

    function CompletaOnClick(e) {
       // e.preventDefault();
        var form = $("#formcompleta");
        var validator = form.data("kendoValidator");
        var validationSummary = $("#validation-summary");
        validationSummary.html("");

        if (validator.validate()) {

            //,window.location.origin + '/Action/TaskView/Complete/@taskId'

            try {

                var obj = {
                    IdTask: '@taskId',
                    RuoliCandidati: $("#zRuoliCandidati").val()
                };
            $.ajax({
                type: "POST",
                    url:  '@(Url.Action("CompletaZip", "Allegato"))',
                    cache: false,
                    data: obj,
                success: function (data) {
                    //alert(data); 
                        window.location = "/Action/ListaAttivita";
                }
            });
            }
            catch {

            }
           
        } else {
            validationSummary.html("<div class='k-messagebox k-messagebox-error'>Inserire i campi obbligatori.</div>");
        }

    }


</script>

<script>
    $('#return').click(function (evt) {

        window.history.back();
    });
</script>


<section class="content">

    <div class="container-fluid">
        <div class="row">
            <div class="box box-">
                <div class="box-header">
                    <i class="ion ion-clipboard"></i>
                    <h3 class="box-title">Dati Allegato</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>

                <!-- /.card-header -->
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-6">
                            <form class='form-horizontal'>
                                <div class='card-body'>
                                    <div class='form-group row'>
                                        <label for='' class='col-sm-2 col-form-label'>ID Allegato</label>
                                        <div class='col-sm-10'>
                                            <input type='text' class='form-control' id='' placeholder='' value='@Allegato.Id' disabled>
                                        </div>
                                    </div>
                                    <div class='form-group row'>
                                        <label for='' class='col-sm-2 col-form-label'>Creato il</label>
                                        <div class='col-sm-10'>
                                            <input type='datetime' class='form-control' id='' placeholder='' value='@Allegato.DataC' disabled>
                                        </div>

                                    </div>
                                    <div class='form-group row'>
                                        <label for='' class='col-sm-2 col-form-label'>Utente Creazione</label>
                                        <div class='col-sm-10'>
                                            <input type='text' class='form-control' id='' placeholder='Nome' value='@Allegato.UtenteC' disabled>
                                        </div>
                                    </div>

                                </div>
                            </form>

                        </div>
                        <div class="col-md-6">
                            <div class='form-group row'>
                                <label for='' class='col-sm-2 col-form-label'>Descrizione</label>
                                <div class='col-sm-10'>
                                    <input type='text' class='form-control' id='' placeholder='' value='@Allegato.Descrizione' disabled>
                                </div>

                            </div>
                            <div class='form-group row'>
                                <label for='' class='col-sm-2 col-form-label'>Modificato il</label>
                                <div class='col-sm-10'>
                                    <input type='datetime' class='form-control' id='' placeholder='' value='@Allegato.DataUM' disabled>
                                </div>

                            </div>
                            <div class='form-group row'>
                                <label for='' class='col-sm-2 col-form-label'>Utente Ultima Modifica</label>
                                <div class='col-sm-10'>
                                    <input type='text' class='form-control' id='' placeholder='Nome' value='@Allegato.UtenteUM' disabled>
                                </div>
                            </div>
                        </div>
                        <!-- /.card -->
                        <!-- /.col (right) -->
                    </div>
                    <!-- /.row -->
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="box box-">
                    <div class="box-header">

                        <i class="ion ion-clipboard"></i>
                        <h3 class="box-title">Gestione Allegato</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                    </div>
                    <form id="formAttributi" >
                    <div class="box-body">
                        <div class="form-group">
                            @foreach (var attributo in Allegato.elencoAttributi.ToList().OrderBy(f => (f.Sequenza)))
                            {


                                @if (attributo.Visibilità != dblu.Docs.Classi.Visibilita_Attributi.HIDDEN)
                                {
                                    <div class='form-group row'>
                                        <div class='col-sm-4'>  @Html.Label($"lbl_{attributo.Nome}", attributo.Descrizione) </div>
                                        <div class='col-sm-8'>

                                            @switch (attributo.Tipo)

                                            {
                                                case "System.DateTime":
                                                    bool xEditable = (attributo.Visibilità == Visibilita_Attributi.EDITABLE && isEdit == true) ? true : false;
                                                    @(Html.Kendo().DatePicker()
                                                            .Name($"ctl_{attributo.Nome}")
                                                            .Enable(xEditable)
                                                            .Value(Allegato.elencoAttributi.GetDateTime(attributo.Nome))
                                                    )
                                                    break;
                                                case "System.Boolean":
                                                    xEditable = (attributo.Visibilità == Visibilita_Attributi.EDITABLE && isEdit == true) ? true : false;
                                                    bool xx = attributo.Valore == null ? false : (bool)Allegato.elencoAttributi.GetBoolean(attributo.Nome);
                                                    @(Html.Kendo().Switch()
                                                          .Name($"ctl_{attributo.Nome}")
                                                          .Enabled(xEditable)
                                                          .Messages(c => c.Checked("Si").Unchecked("No"))
                                                          .Checked(xx)
                                                    )
                                                    break;
                                                default:
                                                    xEditable = (attributo.Visibilità == Visibilita_Attributi.EDITABLE && isEdit == true) ? true : false;
                                                    @(Html.Kendo().TextBox()
                                                          .Name($"ctl_{attributo.Nome}")
                                                          .Enable(xEditable)
                                                          .Value(Allegato.GetAttributo(attributo.Nome,"").ToString())
                                                          .HtmlAttributes(new { style = "width: 100%" })
                                                    )
                                                    break;
                                            }
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                            @if (isEdit)
                            {
                              <button type="button" class="btn margin btn-info pull-right" id="bSalvaAtt" onclick="SalvaAttributi(event)">Salva</button>
                            }
                    </div>
                    </form>
                </div>

            </div>
            <div class="col-md-8">
                <div class="box box-">
                    <div class="box-header">

                        <i class="ion ion-clipboard"></i>
                        <h3 class="box-title">Allegati</h3>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                    </div>


                    <div class="box-body">
                        <div class="form-group" style="margin-top:10px">
                            <div class="col-md-12">
                                @*Griglia con l'elenco dei file presenti nello zip. Se non è uno zip non mostrare solo il file legato a questo allegato*@
                                @(Html.Kendo().Grid<EmailAttachments>()
                            .Name("gridFiles")
                            .Selectable()
                            .Columns(columns =>
                            {
                                columns.Bound(p => p.NomeFile).Title("Nome ").Width("80%");
                                columns.Command(command =>
                                {
                                    command.Custom("download").Text(" ").Click("ScaricaFile").IconClass("k-icon k-i-download");
                                    command.Custom("elimina").Text(" ").Click("EliminaFile").IconClass("k-icon k-i-delete");
                                }).Width("20%");
                            })
                                    //.BindTo(ListaFile)
                                    .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .Model(model => model.Id(p => p.Id))
                                        .Read(read => read.Action("ListaFileInZip", "Allegato").Data("getAllegato"))
                                    )
                            .HtmlAttributes(new { style = "font-size:12" })
                            .Events(events => events.Change("Files_OnRowSelect"))
                            )
                            </div>
                        </div>
                        @if (isEdit)
                        {
                            //Possibilità di aggiungere un file allo zip ---- solo se allegato di tipo Zip?
                            <div class="form-group" style="margin-top:10px">

                                <div class="col-md-12" style="width:100%">
                                    @*action da verificare*@
                                    <form class="col-md-12" method="post" action="/Allegato/AddFile" enctype="multipart/form-data">
                                        <div class="form-group">
                                            <input class="form-control-file col-md-8" name="files" id="files" type="file" aria-label="files" />
                                            <p style="text-align: right">
                                                <button type="submit" class="k-button k-primary  col-md-2" onclick="SubmitForm(this.parentElement, event)">Aggiungi</button>
                                            </p>
                                        </div>
                                    </form>
                                    <br /><br />
                                </div>
                            </div>
                        }

                    </div>
                    @*Visualizzazione dei file*@
                    <div class="form-group" style="margin-top:10px">
                        <div class="col-md-12" style="width:100%" id="anteprimapdf">
                            @*cosa facciamo con le annotazioni??*@
                            @*<button type="button" onclick="saveAnnotations();" class="btn btn-success btn-lg">Salva Annotazioni</button>
        <br />
        <br />*@
                            <ejs-pdfviewer id="pdfviewer" serviceUrl="/api/ZipPdfViewer" documentPath=""
                                           enablePrint="true"
                                           documentLoad="documentLoaded"
                                           annotationAdd="annotationAdd"
                                           enableStampAnnotations="false"
                                           locale="it-IT"
                                               downloadFileName="@string.Concat("",".pdf")" height="1000px">
                            </ejs-pdfviewer>
                        </div>
                    </div>

                    <div class="form-group row" style="margin-top:10px" >
                    
                        @if (fromTask)
                        {
                        <form class="form-horizontal" role="form" method="post" id="formcompleta" autocomplete="off" kendo-validator="true">

                            @if (@flRuoliCandidati)
                            {
                                <div class="col-md-8" style="margin-top:10px">
                                    <label class="control-label col-md-3">Ruoli candidati</label>
                                    @Html.Hidden("_RuoliCandidati", "")
                                    <div class="col-md-5">
                                        @(Html.Kendo().MultiSelect()
                                    .Name("_ms_RuoliCandidati")
                                    .Placeholder("seleziona ...")
                                    .BindTo(vRuoliCandidati)
                                    .Events(e =>
                                    {
                                        e.Change("RuoliCandidati_OnChange");
                                    })
                                    .HtmlAttributes(new { required = "required", validationmessage = "Selezionare almeno un ruolo" })

                                //.Value(vUtentiCandidati)
                                )
                                    </div>
                                </div>
                            }

                            @if (flAnnulla)
                            {
                                <button type="button" id="bAnnulla" class="btn margin btn-info pull-right" onclick="AnnullaOnClick()">Annulla</button>
                            }
                            @*<button formaction="/Action/TaskView/Complete/@taskId" method="post" type="submit" class="btn margin btn-info pull-right">Completa</button>
                            *@
                            <input name="_Annulla" type="hidden" value="false">
                            <button type="button" id="bCompleta" class="btn margin btn-info pull-right" onclick="CompletaOnClick()">Completa</button>


                            <div id="validation-summary">
                            </div>

                        </form>
                            }
                    </div>
                </div>
            </div>
        </div>
    </div>

</section>

<ejs-scripts></ejs-scripts>
