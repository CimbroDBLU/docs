@using dblu.Docs.Models
@using dblu.Docs.Classi
@using dblu.Portale.Plugin.Docs.Services
@using dblu.Portale.Core.Infrastructure.Identity.Classes
@using dblu.Portale.Core.Infrastructure.Identity.Services
@using Microsoft.AspNetCore.Http;
@using System.Security.Claims;

@inject dblu.Portale.Plugin.Docs.Services.MailService _MailService
@inject IHttpContextAccessor _HttpContextAccessor

    <style>
        .e-forward:before {
            content: "\ebed"
        }
        .e-move:before {
            content: "\e60b"
        }
        .e-answer:before {
            content: "\ebfa"
        }
        .e-show:before {
            content: "\eb64"
        }

    </style>

<ServerCombo @bind-nMailBox="@MailBox"></ServerCombo>

<div class="row form-group">
    <div class="col">
        <SfGrid AllowGrouping="false" AllowTextWrap="true" DataSource="@nEmails" SelectedRowIndex="1" AllowPaging="true" AllowSorting="true" Toolbar=@Tool>
            <GridTextWrapSettings WrapMode="WrapMode.Content"></GridTextWrapSettings>
            <GridEditSettings AllowAdding="false" AllowEditing="false" AllowDeleting="false" Mode="EditMode.Dialog"></GridEditSettings>
            <GridPageSettings PageSize="10"></GridPageSettings>
            <GridColumns>
                <GridColumn AllowEditing="false"  AllowSorting="true" Field=@nameof(AllegatoEmail.Mittente) HeaderText="Email">
                    <Template>
                        @{
                        var Attach = (context as AllegatoEmail);
                        bool IsClient = !string.IsNullOrEmpty(Attach.Chiave3);
                            <div>
                                @if (IsClient)
                                {
                                <span>Cliente: @Attach.Chiave3</span>
                                <br />
                                }
                                <b>@Attach.Chiave4</b><br />
                                @Attach.Mittente
                            </div>
                        }
                    </Template>
                </GridColumn>
                <GridColumn AllowEditing="false" Width="120px" AllowSorting="true" Field=@nameof(AllegatoEmail.Data) HeaderText="Data" Format="d" Type="ColumnType.Date"></GridColumn>
                <GridColumn AllowEditing="false" Width="40px" AllowSorting="true" Field=@nameof(AllegatoEmail.LastOp) HeaderText="LastOp">
                    <Template>
                        @{
                        var Attach = (context as AllegatoEmail);
                        <div>
                            @if (Attach.LastOp == TipoOperazione.Elaborato)
                            {
                            <i class="fas fa-check"></i>
                            }
                            @if (Attach.LastOp == TipoOperazione.Cancellato)
                            {
                            <i class="far fa-trash-alt"></i>
                            }
                            @if (Attach.LastOp == TipoOperazione.Annullato)
                            {
                            <i class="fas fa-times"></i>
                            }
                            @if (Attach.LastOp == TipoOperazione.Chiuso)
                            {
                            <i class="fas fa-lock"></i>
                            }
                            @if (Attach.LastOp == TipoOperazione.Creato)
                            {
                            <i class="far fa-file"></i>
                            }
                            @if (Attach.LastOp == TipoOperazione.Inoltrato)
                            {
                            <i class="fas fa-share"></i>
                            }
                            @if (Attach.LastOp == TipoOperazione.Modificato)
                            {
                            <i class="fas fa-edit"></i>
                            }
                            @if (Attach.LastOp == TipoOperazione.Riaperto)
                            {
                            <i class="fas fa-book-reader"></i>
                            }
                            @if (Attach.LastOp == TipoOperazione.Risposto)
                            {
                            <i class="fas fa-reply"></i>
                            }
                            @if (Attach.LastOp == TipoOperazione.Spostato)
                            {
                            <i class="far fa-folder"></i>
                            }
                            @if (Attach.LastOp == TipoOperazione.Stampato)
                            {
                            <i class="fas fa-print"></i>
                            }
                        </div>
                        }
                    </Template>

                </GridColumn>

            </GridColumns>
        </SfGrid>
    </div>
</div>

@code {

    private EmailServer MailBox { get; set; }

    private ObservableCollection<AllegatoEmail> nEmails { get => (MailBox is not null) ? new ObservableCollection<AllegatoEmail>(_MailService._allMan.GetEmailInArrivo("EMAIL", MailBox.Nome) ) : new ObservableCollection<AllegatoEmail>(); }

    /// <summary>
    /// List of the buttons on toolbar of the grid
    /// </summary>
    private List<Object> Tool = new List<Object>()
    {
            new ItemModel(){ Id="Inoltra",Text="", TooltipText="Inoltra", PrefixIcon="e-forward" } ,
            new ItemModel(){ Id="Sposta",Text="", TooltipText="Sposta", PrefixIcon="e-move" } ,
            new ItemModel(){ Id="Rispondi",Text="", TooltipText="Rispondi", PrefixIcon="e-answer" },
            new ItemModel(){ Id="Cancella",Text="", TooltipText="Cancella", PrefixIcon="e-delete" } ,
            new ItemModel(){ Id="Mostra",Text="", TooltipText="Mostra", PrefixIcon="e-show" },
            new string("Search")
    };

    /// <summary>
    /// On Init component
    /// </summary>
    protected override void OnInitialized()
    {
    }
}
