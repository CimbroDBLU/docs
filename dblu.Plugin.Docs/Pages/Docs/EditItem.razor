@*
    Page for editing an Item
*@
@page "/Docs/Item/{Id}"
@page "/Docs/Item/{Id}/{ShowMetadata}"
@using System.IO
@using Newtonsoft.Json
@using dblu.Docs.Models
@using dblu.Portale.Plugin.Docs.Pages.Docs.Shared
@using dblu.Portale.Plugin.Docs.Classes
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

@inject dblu.Portale.Plugin.Docs.Services.AllegatiService _AttachService
@inject NavigationManager  _NavigationManager
@inject ProtectedSessionStorage _SessionStore
@inject ILogger<EditItem> _Logger

<PageTitle nTitle="@CardTitle" />

<section class="content">
    <SfSpinner @bind-Visible="IsSpinnerVisible">
    </SfSpinner>
    <SfCard>
        <CardHeader Title="@CardTitle" />
        <CardContent EnableSeperator="true">
            <EditItemMetadata nItem="@Item" nShowMetadata="@(!string.IsNullOrEmpty(ShowMetadata) && ShowMetadata=="true")"></EditItemMetadata>
            <CardContent EnableSeperator="true">
                <div class="row">
                    <div class="col-12">
                        <SfButton CssClass="e-primary" OnClick="GoBack">Indietro</SfButton>
                    </div>
                </div>
            </CardContent>
        </CardContent>
    </SfCard>


</section>
@code {
    /// <summary>
    /// Item ID
    /// </summary>
    [Parameter]
    public string Id { get; set; }

    /// <summary>
    /// Indicates if metadata of attaqchments must be shower
    /// </summary>
    [Parameter]
    public string ShowMetadata { get; set; } = "true";

    /// <summary>
    /// Show/Hide the spinner
    /// </summary>
    private bool IsSpinnerVisible { get; set; } = false;

    /// <summary>
    /// Title of the Card and Page
    /// </summary>
    public string CardTitle { get; set; }

    /// <summary>
    /// Current Item
    /// </summary>
    public Elementi Item { get; set; }

    /// <summary>
    /// On Init component
    /// </summary>
    protected override void OnInitialized()
    {
        IsSpinnerVisible = true;
        if (string.IsNullOrEmpty(ShowMetadata)) ShowMetadata = "true";
        Stopwatch Sw = Stopwatch.StartNew();
        Item = _AttachService.GetElemento(Guid.Parse(Id), 0);
        CardTitle = $"Modifica Elemento [{Item.Descrizione}]";
        _Logger.LogInformation($"EditItem.OnInitialized: Loaded Item {Id} in {Sw.ElapsedMilliseconds} ms");
        IsSpinnerVisible = false;

      //  File.WriteAllText("c:\\TEMP\\pippo.json", JsonConvert.SerializeObject(Item, Formatting.Indented));
    }

    /// <summary>
    /// Go back to the caller
    /// </summary>
    private async void GoBack()
    {
        string back = (await _SessionStore.GetAsync<string>("Referrer")).Value;
        if (string.IsNullOrEmpty(back))
            _NavigationManager.NavigateTo($"/Docs/Dossiers");
        else
        {
            _NavigationManager.NavigateTo(back);
            await _SessionStore.DeleteAsync("Referrer");
        }
    }
}