@*
    Component for showing a list of Dossiers
*@

@page  "/Docs/Dossiers"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Grids
@using dblu.Docs.Models
@using dblu.Portale.Plugin.Docs.Services

@inject dblu.Portale.Plugin.Docs.Services.AllegatiService _ele
@inject NavigationManager  _NavigationManager
<style>

    .smallb {
        width: 60px;
    }
</style>

<PageTitle nTitle="Lista Fascicoli" />
                <SfSpinner @bind-Visible="IsSpinnerVisible">
                </SfSpinner>
<SfCard>
    <CardHeader Title="Lista Fascicoli" />
    <CardContent EnableSeperator="true">
        <SfGrid Height="615" SelectedRowIndex="0" ID="ODATA_Dossiers" DataSource="@DossiersData" EnablePersistence="false" AllowFiltering="true" AllowPaging="true" AllowSorting="true" TValue="viewFascicoli" Toolbar=@Tool>
            <GridEvents TValue="viewFascicoli" QueryCellInfo="CustomizeCell"  OnRecordDoubleClick="OnDoubleClick"></GridEvents>
            <GridPageSettings   PageSize="13"></GridPageSettings>
            <GridSearchSettings Fields=@(new string[] { "DscFascicolo", "DscCategoria","DscCategoria", "Campo1", "Campo2","Campo3","Campo4","Campo5","Campo6","Campo7","Campo8","Campo9","Campo10"})></GridSearchSettings>
            <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu">
            </GridFilterSettings>
            <GridColumns>
                <GridColumn Field=@nameof(viewFascicoli.IdFascicolo) Visible="false" HeaderText="ID" IsPrimaryKey="true"></GridColumn>
                <GridColumn Field=@nameof(viewFascicoli.DscFascicolo) Width="400" AllowSearching="true" AllowSorting="true" AllowFiltering="true" HeaderText="Descrizione"></GridColumn>
                <GridColumn Field=@nameof(viewFascicoli.DscCategoria) AllowSearching="true" AllowSorting="true" FilterSettings="@(new FilterSettings{Type = Syncfusion.Blazor.Grids.FilterType.CheckBox })" AllowFiltering="true" HeaderText="Categoria"></GridColumn>
                <GridColumn Field=@nameof(viewFascicoli.Campo1) AllowSearching="true" AllowSorting="true" AllowFiltering="true" HeaderText="@Cols[0].Des" Visible="@Cols[0].Visible"></GridColumn>
                <GridColumn Field=@nameof(viewFascicoli.Campo2) AllowSearching="true" AllowSorting="true" AllowFiltering="true" HeaderText="@Cols[1].Des" Visible="@Cols[1].Visible"></GridColumn>
                <GridColumn Field=@nameof(viewFascicoli.Campo3) AllowSearching="true" AllowSorting="true" AllowFiltering="true" HeaderText="@Cols[2].Des" Visible="@Cols[2].Visible"></GridColumn>
                <GridColumn Field=@nameof(viewFascicoli.Campo4) AllowSearching="true" AllowSorting="true" AllowFiltering="true" HeaderText="@Cols[3].Des" Visible="@Cols[3].Visible"></GridColumn>
                <GridColumn Field=@nameof(viewFascicoli.Campo5) AllowSearching="true" AllowSorting="true" AllowFiltering="true" HeaderText="@Cols[4].Des" Visible="@Cols[4].Visible"></GridColumn>
                <GridColumn Field=@nameof(viewFascicoli.Campo6) AllowSearching="true" AllowSorting="true" AllowFiltering="true" HeaderText="@Cols[5].Des" Visible="@Cols[5].Visible"></GridColumn>
                <GridColumn Field=@nameof(viewFascicoli.Campo7) AllowSearching="true" AllowSorting="true" AllowFiltering="true" HeaderText="@Cols[6].Des" Visible="@Cols[6].Visible"></GridColumn>
                <GridColumn Field=@nameof(viewFascicoli.Campo8) AllowSearching="true" AllowSorting="true" AllowFiltering="true" HeaderText="@Cols[7].Des" Visible="@Cols[7].Visible"></GridColumn>
                <GridColumn Field=@nameof(viewFascicoli.Campo9) AllowSearching="true" AllowSorting="true" AllowFiltering="true" HeaderText="@Cols[8].Des" Visible="@Cols[8].Visible"></GridColumn>
                <GridColumn Field=@nameof(viewFascicoli.Campo10) AllowSearching="true" AllowSorting="true" AllowFiltering="true" HeaderText="@Cols[9].Des" Visible="@Cols[9].Visible"></GridColumn>
                <GridColumn HeaderText="" Width="80">
                    <Template>
                        @{
                            var ID = (context as viewFascicoli).IdFascicolo.ToString();
                            <SfButton CssClass="smallb" OnClick="() => OpenDossier(ID)" HtmlAttributes="@(new Dictionary<string, object>() { { "title", "Apri" } })" IconCss="e_fa fa-folder-open"></SfButton>
                        }
                    </Template>
                </GridColumn>
            </GridColumns>
        </SfGrid>
    </CardContent>
</SfCard>

@code{

    /// <summary>
    /// Indicates if spinner must be visible
    /// </summary>
    private bool IsSpinnerVisible { get; set; } = false;

    /// <summary>
    /// Dossiers
    /// </summary>
    ObservableCollection<viewFascicoli> DossiersData { get; set; } = new();

    /// <summary>
    /// List of custom columns of the dossiers
    /// </summary>
    List<Colonna> Cols { get; set; } = new List<Colonna>();

    /// <summary>
    /// List of the buttons on toolbar of the grid
    /// </summary>
    private List<Object> Tool = new List<Object>()
{
            "Search"
    };

    /// <summary>
    /// On Init component get the custom columns
    /// </summary>
    protected override async void OnInitialized()
    {
        Cols = _ele.GetColonne("vFASCICOLO");
        IsSpinnerVisible = true;
        Task.Run(() =>
        {
            DossiersData = new ObservableCollection<viewFascicoli>(_ele.GetFascicoliV().AsEnumerable());
            InvokeAsync(() => { IsSpinnerVisible = false; StateHasChanged(); });
        });
    }

    /// <summary>
    /// Open selected dossier
    /// </summary>
    /// <param name="Id"></param>
    public async void OpenDossier(string Id)
    {
        _NavigationManager.NavigateTo($"/Docs/Dossier/{Id}");
    }

    /// <summary>
    /// On double click edit the selected dossier
    /// </summary>
    /// <param name="args"></param>
    public async void OnDoubleClick(RecordDoubleClickEventArgs<viewFascicoli> args)
    {
        _NavigationManager.NavigateTo($"/Docs/Dossier/{args.RowData.IdFascicolo.ToString()}");
    }

    /// <summary>
    /// Cell priority customization
    /// </summary>
    /// <param name="args"></param>
    private void CustomizeCell(QueryCellInfoEventArgs<viewFascicoli> args)
    {
        viewFascicoli F= (args.Data as viewFascicoli);
        if (args.Column.Field == F.ColorColumn)
        {           
           args.Cell.AddStyle(new string[] { $"background-color:{F.BackColor}" });
           args.Cell.AddStyle(new string[] { $"color:{F.ForeColor}" });
        }
    }
}
