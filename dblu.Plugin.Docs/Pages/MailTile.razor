@using dblu.Portale.Core.Infrastructure.Identity.Classes
@using dblu.Portale.Core.Infrastructure.Identity.Services
@*
    Component for displaying a Tile with the incoming emails
    MailView/InArrivo
*@
@inject dblu.Portale.Plugin.Docs.Services.MailService _MailService
@inject AuthenticationStateProvider _AuthenticationStateProvider
@inject IApplicationUsersManager _ApplicationUserManager
@inject ILogger<MailTile> _Logger


<Tile nTitle="@Number"
      nDescription="Email in arrivo"
      nLink=@Link
      nIcon="fas fa-envelope-open-text"
      nBackColor="#17a2b8" nForeColor="white"></Tile>


@code {
    /// <summary>
    /// Number of the icoming emails
    /// </summary>
    public string Number { get; set; }

    /// <summary>
    /// Link to Open
    /// </summary>
    public string Link { get; set; }

    /// <summary>
    /// On Init component
    /// </summary>
    protected override async void OnInitialized()
    {
        Stopwatch SW = Stopwatch.StartNew();
        var authState = await _AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        ApplicationUser AU = _ApplicationUserManager.GetUser(user.Identity.Name);
        string Version=AU.Properties["VERSION"]?.ToString() ?? "STANDARD";
        Link="/Mail/Inbox";
        if(Version=="BETA") Link="/MailUI/Inbox";
        if(Version=="LEGACY") Link="/MailView/InArrivo";

        Number = _MailService.CountEmailInArrivo("EMAIL", user.Claims).ToString();
        _Logger.LogDebug($"MailTile.OnInitialized: {Number} emails in {SW.ElapsedMilliseconds} ms");

    }

}
