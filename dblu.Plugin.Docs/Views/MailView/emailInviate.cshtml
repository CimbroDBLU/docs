@model dblu.Docs.Models.AllegatoEmail
@using dblu.Docs.Classi
@using dblu.Docs.Models
@inject dblu.Portale.Plugin.Docs.Services.MailService _mailservice
@inject dblu.Docs.Interfacce.ISoggettiService  _sggservice

@using Kendo.Mvc.UI
@using dblu.Portale.Plugin.Docs.ViewModels
@using NToastNotify
@addTagHelper *, Kendo.Mvc

@{
    ViewData["Title"] = "Email Inviate";
    List<dblu.Docs.Models.TipiElementi> ListaTipiElementi;
    List<dblu.Docs.Models.TipiElementi> ListaTipiElementiServ;
    TipiAllegati TipoAll = _mailservice._allMan.GetTipoAllegato("EMAIL");

    //-----OK--------
    var ListaServer = _mailservice._serMan.GetServersEmailinRoles(Context.User.Claims, TipiRecordServer.CartellaMail);
    //---------------
    var ListaRuoli = _mailservice.getRuoli(Context.User.Claims, "");
    ListaTipiElementi = _mailservice._elmMan.GetAllTipiElementi(ListaRuoli);

    if (ListaServer != null)
    {
        var ListaRuoliServ = _mailservice.getRuoli(Context.User.Claims, ListaServer.ElementAt(0).Nome);
        ListaTipiElementiServ = _mailservice._elmMan.GetAllTipiElementi(ListaRuoliServ);
    }
    else
    {
        ListaTipiElementiServ = ListaTipiElementi;
    }

    //var s = Url.Action("~");
    //var ListaTipiElementi = await _mailservice._elmMan.GetAllTipiElementiAsync();
    // TipiElementi Tipoelemento = _mailservice..GetTipoAllegato("EMAIL");
    //var attr = new dblu.Portale.Plugin.Docs.ViewModels.AttributiViewModel();
    //attr.Attributi = TipoAll.Attributi;
    //attr.NomeView = TipoAll.ViewAttributi;
    //attr.Valori = "{\"Mittente\":\"roberta@miottomobili.it\",\"Data\":\"2019-12-13T09:41:10Z\",\"CodiceSoggetto\":\"aaa\",\"Oggetto\":\"CONFERMA\",\"MessageId\":\"CAK_jKF0R_JhvOJG4zjWTvgGhW1HAspKLDTN1zFYcUjV3-vgfdg@mail.gmail.com\",\"CodiceCliente\":\"21351\",\"NomeServer\":\"Test\"}";

    //};

}

<style>

    #gridEmail td {
        font-size: 12px;
        padding-top: 0em;
        padding-bottom: 0em;
        height: 100%;
    }

    #emailAttachments td {
        font-size: 12px;
        padding-top: 0em;
        padding-bottom: 0em;
    }
</style>
<style>

    .my-icon-class-download:before {
        content: "\e132"; /* Adds a glyph using the Unicode character number */
    }

    body.waiting * {
        cursor: progress;
    }

    .my-icon-class-inoltra:before {
        content: "\e101"; /* Adds a glyph using the Unicode character number */
    }

    .my-icon-class-undo:before {
        content: "\e100"; /* Adds a glyph using the Unicode character number */
    }
</style>



<section class="content-header">
    <h1>
        Email inviate
    </h1>
    <ol class="breadcrumb">
        <li><a href="/Index"><i class="fa fa-dashboard"></i>Home</a></li>
        <li class="active">Email processate</li>
    </ol>
</section>

<script src="~/Scripts/dblugrid.js"></script>
<script src="~/Scripts/emailinviate.js"></script>


<script>

    UrlActions = {
        MailView_InArrivoCaricaDettaglio: '@Url.Action("InArrivoCaricaDettaglio", "MailView")',
        MailView_ApriFile: '@Url.Action("ApriFile","MailView" )',
        MailView_InArrivo_Inoltra: '@Url.Action("InArrivo_Inoltra","MailView" )',
        MailView_Processate_Riapri: '@Url.Action("Processate_Riapri", "MailView" )',
        MailView_Processate_Cancella: '@Url.Action("Processate_Cancella", "MailView" )',
        ImagePreview: '@Url.Action("ImagePreview", "MailView")'
    };

    TipoAll = {
        Codice: "@TipoAll.Codice"
    }
    TipiOggetto = {
        ALLEGATO: '@TipiOggetto.ALLEGATO'
    }

</script>

<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-xs-5">
            <label class="control-label col-md-4" style="font-size:12px">Casella di posta:</label>
            <div class="col-md-6">
                @(Html.Kendo().ComboBox()
                    .Name("emailServer")
                    .Placeholder("Seleziona Server...")
                    .DataTextField("Nome")
                    .DataValueField("Nome")
                    .BindTo(ListaServer)
                    .SelectedIndex(0)
                    .Suggest(true)
                    .HtmlAttributes(new { style = "width:100%;" })
                    .Events(e =>
                    {
                        e.Select("onSelectServer");
                    })

                )
            </div>
        </div>
    </div>
    <div>
        @(Html.Kendo().Dialog()
        .Name("dialog")
        .Title("Eliminazione")
        .Content("<p>Sei sicuro di eliminare <strong>completamente</strong> l'email?<p>")
        .Width(400)
        .Modal(false)
        .Visible(false)
        .Actions(actions =>
        {
            actions.Add()
            .Text("Annulla")
            .Action("onAnnulla");
            actions.Add().Text("Elimina")
            .Primary(true)
            .Action("onElimina");
        })
    )
    </div>
    <div class="row">
        <div class="col-xs-5">
            <div class="box box-solid box-default">
                @Html.Hidden("IdAllegato")
                <div class="box-body">
                    <div class="k-grid">
                        @(Html.Kendo().Grid<dblu.Docs.Models.AllegatoEmail>()
                        .Name("gridEmail")
                        .Columns(columns =>
                        {
                            columns.Bound(p => p.Id).Title("Id").Width(0).Hidden();
                            columns.Bound(p => p.Chiave4).Title("Nome").Width(0).Hidden();
                            columns.Bound(p => p.Destinatario).Title(TipoAll.Attributi.Descrizione("Destinatario")).Width(300)
                                .ClientTemplate("<span> cliente #: Chiave3# </span> <br/>"
                                    + "<span><b> #: Destinatario# </b></span>" );
                            columns.Bound(p => p.Oggetto).Title("Oggetto").Width(150);
                            columns.Bound(p => p.Data).Title("Data").Width(100).Format("{0:dd/MM/yy HH:mm}");
                            @*
                            columns.Command(command =>
                            {
                                command.Custom("Inoltra").Text("").Click("InoltraEmail").IconClass("k-icon my-icon-class-inoltra").HtmlAttributes(new { style = "width:80px" });
                               // command.Custom("Riapri").Text("").Click("RiapriEmail").IconClass("k-icon my-icon-class-undo").HtmlAttributes(new { style = "width:80px" });
                                command.Custom("Elimina").Text("").Click("gridEmailOnRemove").IconClass("k-icon k-i-delete").HtmlAttributes(new { style = "width:80px" });
                                //command.Custom("*Elimina*").Click("DeleteEmail");
                                //command.Destroy().Text("Cancella").IconClass("k-icon my-icon-class-cancella").HtmlAttributes(new { style = "width:80px" });
                                //columns.Bound(p => p.Stato).Width(50).ClientTemplate("#if (data.Stato == 3){#<span class='k-icon k-i-printer'></span>#} else if (data.Stato==2){#<span class='k-icon k-i-file-add'></span>#}#");
                                //command.Custom("History").Template("#= xIconLastOp(data) #").Click("viewHistory").HtmlAttributes(new { style = " hidden: 'hidden' " }) ;
                            }).Width(90);
                             *@
                            columns.Bound(p => p.LastOp).Width(50).Title("Operaz.").ClientTemplate("#= xIconLastOp(data) #").Width(80);
                            columns.Command(command => command.Custom("History").Template("#= xIconLastOp(data) #").Click("viewHistory")).Width(100).Hidden();
                            //columns.Bound(p => p.Stato).Width(50).ClientTemplate("#if (data.Stato == 5){#<span class='k-icon k-i-check-outline' style='color: green;'></span>#} else if (data.Stato==9){#<span class='k-icon k-i-close-outline' style='color: red;'></span>#}#");
                        })
                        .ToolBar(toolbar =>
                        {
                        // toolbar.ClientTemplateId("GridToolbarTemplate");
                        toolbar.Custom().Text("Inoltra").IconClass("k-icon my-icon-class-inoltra").HtmlAttributes(new { style = "width:75px", onclick = "InoltraMail()" });
                        toolbar.Custom().Text("Elimina").IconClass("k-icon k-i-delete").HtmlAttributes(new { style = "width:80px", onclick = "CancellaMail()" });
                        toolbar.Search();
                        })
                        .Pageable()
                        .Sortable()
                        .Scrollable(s => s.Height("auto"))
                        .Filterable( )
                        .Selectable()
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .PageSize(20)
                            .Batch(false)
                            .ServerOperation(true)
                            .AutoSync(true)
                            .Events(events => events.Error("error_handler"))
                            .Model(model =>
                            {
                                model.Id(p => p.Id);
                            })
                            .Sort(sort => sort.Add(p => p.DataC))
                            .Read(read => read.Action("Inviate_Read", "MailView").Data("getEmails"))

                         )
                         .Events(events => events
                            .Change("gridEmailOnChange")
                         )
                         .Resizable(resize => resize.Columns(true))
                         .HtmlAttributes(new { Height = "100%", style = "font-size:10" })
                       //  .ToolBar(toolbar => { toolbar.Search(); })
                         .Search(s => { s.Field(c => c.Descrizione); s.Field(c => c.Chiave1); s.Field(c => c.Chiave3); s.Field(c => c.Chiave4); })
                        )
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xs-7">
            <div class="box box-solid box-default" hidden="hidden">
                <div class="box-body">
                    <form>
                        <div class="form-group">
                            <label class="control-label col-md-4" style="font-size:12px ">Cliente</label>
                            <div class="col-md-10" style="width:80%;">
                                <div class="form-row">
                                    <div class="form-group col-md-2">
                                        <input type="text" class="form-control" id="CodiceSoggetto" placeholder="" disabled value="" />
                                    </div>
                                    <div class="form-group col-md-6">
                                        <input type="text" class="form-control" id="NomeSoggetto" placeholder="" disabled value="" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <div class="box box-solid box-default">
                <div class="box-body">
                    <div class="form-group">
                        <div class="form-row">
                            <label class="control-label col-md-2" style="font-size:12px">Testo</label>
                            <div style="width:95%">
                                <textarea class="form-control" id="TestoEmail" name="TestoEmail" rows="10" style="width:100%" readonly="readonly"></textarea>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2" style="font-size:12px">Allegati </label>
                        <div class="col-md-12" style="width:100%">
                            @(Html.Kendo().Grid<EmailAttachments>()
                            .Name("emailAttachments")
                            .PersistSelection()
                            .Columns(columns =>{
                                columns.Bound(p => p.NomeFile).Title("Nome ").Width("90%");
                                columns.Command(command =>
                                    {
                                        command.Custom("download").Text(" ").Click("ScaricaAllegato").IconClass("k-icon my-icon-class-download");
                                    }).Width("10%");
                                columns.Command(command => command.Custom("anteprimaImg").Text(" ").Click("ApriAllegato").IconClass("k-icon k-i-file-image")).Width("10%");
                            })
                            .Events(events => events.DataBound("onDataBoundAttachments"))
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Model(model => model.Id(p => p.Id))
                            )
                            .HtmlAttributes(new { style = "font-size:12" })
                            )

                        </div><br /><br />
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@(Html.Kendo().Window()
    .Name("wInoltra")
    .Size("auto")
    .Title("Inoltra a:")
    .Visible(false)
    .Actions(actions => actions.Close())
    .Content(@<text>
        <div class="box-body">
            <form id="formInoltra">
                <div class="form-group">
                    <div class="form-group col-md-8">

                        @(Html.Kendo().MultiSelect()
                            .Name("multiMailInoltro")
                            .DataTextField("Email")
                            .DataValueField("Email")
                            .Placeholder("Seleziona gli utenti")
                            .ItemTemplate("#if(Name != null){# #= Name # #}#  #if(LastName != null){# #= LastName # #}# #if(Email != null){# <span class=\"UserName\">#= Email #</span> #}# ")
                            .Height(450)
                            .Events(ev => ev.DataBound("onmultiMailInoltroDataBound"))
                            .DataSource(source =>
                            {
                                source
                                .Ajax()
                                .PageSize(80)
                                .Read(read => read.Action("Email_Read", "MailView").Data("ValidMail"));

                            })
                         )
                    </div>
                    <div class="form-group col-md-2">
                        @(Html.Kendo().Button()
                        .Name("okinoltra")
                        .Content("Invia")
                        .Events(ev => ev.Click("inoltraOnClick"))
                        )
                    </div>
                </div>
            </form >
        </div >
    </text>)
    .Width(600)
    .Height(120)
    .Modal(true)
)
@(Html.Kendo().Window()
    .Name("wHistory")
    .Size("auto")
    .Title("Operazioni:")
    .Visible(false)
    .Actions(actions => actions.Close())
    .Content(@<text>
        <div class="box-body">
            <div class="form-group col-md-11">
              @(Html.Kendo().Grid<LogDoc>()
                .Name("logs")
                .Columns(columns =>
                {
                    columns.Bound(p => p.Data).Title("Data").Width("50%").ClientTemplate("#= kendo.toString(Data, 'dd/MM/yyyy HH:mm') #");
                    columns.Bound(p => p.Operazione).Title("Operazione").Width("20%");
                    columns.Bound(p => p.Utente).Title("Utente").Width("20%");
                })
                .DataSource(dataSource => dataSource
                    .Ajax()
                    //.Model(model => model.Id(p => p.ID))
                    .Read(read => read.Action("GetLogsItem", "Docs").Data("GetLogsItem"))

                    )
                    .HtmlAttributes(new { style = "font-size:12" })
                )
            </div>
        </div >
    </text>)
    .Width(600)
    .Height(180)
    .Modal(true)
)
@(Html.Kendo().Dialog()
    .Name("wCancella")
    .Title("Elimina email")
    .Visible(false)
    .Actions(actions => {
        actions.Add().Text("Annulla").Action("wCancellaIgnora");
        actions.Add().Text("Solo archivio").Action("wCancellaOk1");
        actions.Add().Text("Archivio e casella posta").Action("wCancellaOk2");
    })
    .Content("<p>Scegliere se eliminare la mail solo dall'archivio o anche dalla casella di posta</p>")
    .Width(600)
    .Height(200)
    .Modal(true)
)
@*            <form>
        <div class='form-group'>
            <div class='form-group col-md-10'>
                <input type='checkbox'  id='chkemailElimina'  >
                <label for='chkemailElimina' class='control-label col-md-6' >Elimina anche dalla casella di posta</label>
            </div>
        </div>
    </form >
*@