

@model dblu.Docs.Models.Categorie

@using dblu.Portale.Plugin.Docs.ViewModels
@using Kendo.Mvc.UI

<section class="content">
    <!-- Main row -->
    <div class="row">
        <div class="box-body">
            <form class="form-horizontal" role="form" method="post">
                <div class="form-group">
                    <label class="control-label col-md-2">Codice</label>
                    <div class="col-md-10" style="width:20%">
                        <input type="text"
                               name="Codice"
                               class="form-control" value="@Model.Codice" />
                    </div>
                   
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">Descrizione</label>
                    <div class="col-md-10" style="width:50%">
                        <input type="text"
                               name="Descrizione"
                               class="form-control" value="@Model.Descrizione" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">View atttributi </label>
                    <div class="col-md-10" style="width:50%">
                        <input type="text"
                               name="ViewAttributi"
                               class="form-control" value="@Model.ViewAttributi" />
                    </div>
                        <div class="col-md-2" >
                    <button formaction="/Docs/SalvaCategoria" method="post" type="submit" class="btn btn-info pull-left">Salva</button>
                        </div>
                </div>
            </form>
            <form class="form-horizontal" role="form" method="post">
                <div class="form-group">

                    @(Html.Kendo().Grid<dblu.Docs.Classi.Attributo>()
                       .Name("gridAttributi")
                       .Columns(columns =>
                       {
                           columns.Bound(p => p.Nome).Width(200);
                           columns.Bound(p => p.Descrizione).Width(200);
                           columns.Bound(p => p.Alias).Width(200);
                           //columns.Bound(p => p.Tipo).Width(150);
                           columns.ForeignKey(p => p.Tipo, (System.Collections.IEnumerable)ViewData["Tipi"], "Id", "Des").Width(180);
                           columns.Bound(p => p.Obbligatorio).ClientTemplate("<input type='checkbox' #= Obbligatorio ? checked='checked':'' # class='chkbxW'  disabled />").Width(80);
                           //columns.Bound(p => p.Visibilità).Width(100);
                           columns.Bound(p => p.ValorePredefinito).Width(200);
                           columns.ForeignKey(p => p.Visibilità,(System.Collections.IEnumerable)ViewData["Visibilita"], "Id","Des").Width(150);
                           columns.Bound(p => p.Sequenza).Width(100);
                           columns.Command(command =>
                           {
                               command.Edit().Text("Modifica");
                               command.Destroy().Text("Elimina");
                           }).Width(500);
                       })
                       .ToolBar(toolbar => toolbar.Create())
                       .Editable(editable => editable.Mode(GridEditMode.InLine))
                       .Pageable()
                       .Sortable()
                       .Scrollable()
                       .HtmlAttributes(new { style = "height:430px;" })
                       .DataSource(dataSource => dataSource
                            .Ajax()
                            .PageSize(20)
                            .Model(model =>
                            {
                                model.Id(p => p.Nome);

                                model.Field(p => p.Tipo).DefaultValue(ViewData["defaultTipo"]);
                            })
                            .Create(update => update.Action("AttributiCategoria_Create", "Docs"))
                            .Read(read => read.Action("AttributiCategoria_Read", "Docs"))
                            .Update(update => update.Action("AttributiCategoria_Update", "Docs"))
                            .Destroy(update => update.Action("AttributiCategoria_Destroy", "Docs"))
                     )

                    )

                </div>
            </form>
        </div>
    </div>

     
</section>