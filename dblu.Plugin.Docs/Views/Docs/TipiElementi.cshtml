@model dblu.Docs.Models.TipiElementi
@using dblu.Docs.Classi

@using dblu.Portale.Plugin.Docs.ViewModels
@using Kendo.Mvc.UI
@addTagHelper *, Kendo.Mvc
@{
    ViewData["Title"] = "Tipi di Elementi";
}

<section class="content-header">
    <h1>
        Tipi di Elementi
    </h1>
    <ol class="breadcrumb">
        <li><a href="/Index"><i class="fa fa-dashboard"></i>Home</a></li>
        <li><a href="/Docs/TipiElementi">TipiElementi</a></li>
    </ol>
</section>


<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box box-solid box-default">
                <div class="box-header with-border">
                    @*     <h3 class="box-title">Categorie</h3>*@
                    @Html.Hidden("CodTipo")
                 </div>
                <div class="box-body">

                    @(Html.Kendo().Grid<dblu.Docs.Models.TipiElementi>()
            .Name("gridTipiElementi")
            .Columns(columns =>
            {
            columns.Bound(p => p.Codice).Width(100);
            columns.Bound(p => p.Descrizione).Width(500);
            columns.Bound(p => p.ViewAttributi).Width(200);
            columns.Bound(p => p.Processo).Width(200);
            columns.Bound(p => p.AggregaAElemento).Width(100).ClientTemplate("<input type='checkbox' #= AggregaAElemento ? checked='checked':'' # class='chkApp' disabled='disabled'/>");


                    columns.Command(command =>
                    {
                        command.Custom("Modifica").Click("showEditor");
                        command.Destroy().Text("Elimina");
                        command.Custom("Duplica").Click("duplica");
                    }).Width(500);
        })
            //.ToolBar(toolbar => toolbar.Create())
            .ToolBar(toolbar =>
                {
                    toolbar.Custom().Text("Nuovo Elemento").HtmlAttributes(new { id = "AddTipoElemento" });
                })
            .Editable(editable => editable.Mode(GridEditMode.PopUp))
            .Pageable()
            .Sortable()
            .Scrollable()
            .HtmlAttributes(new { style = "height:430px;" })
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(20)
                .Events(events => events.Error("error_handler"))
                .Model(model =>
                {
                    model.Id(p => p.Codice);
                    model.Field(e => e.Codice).Editable(true);
                    model.Field(e => e._listaAttributi).DefaultValue(new List<Attributo>());
                })
                            //.Create(update => update.Action("TipiElementi_Create", "Docs"))
                            .Read(read => read.Action("TipiElementi_Read", "Docs"))
                            .Update(update => update.Action("TipiElementi_Update", "Docs"))
                            .Destroy(update => update.Action("TipiElementi_Destroy", "Docs"))
                        )
                    )
                </div>
            </div>
        </div>
    </div>
</section>




<script type="text/javascript">
    $(function () {
        // The Name() of the Window is used to get its client-side instance.
        var dialog = $("#window").data("kendoWindow");
    });
</script>

<script type="text/javascript">

    function showEditor(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = '/Docs/editTipoElemento?Codice=' + dataItem.Codice;
    }

    function duplica(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = '/Docs/duplicaTipoElemento?Codice=' + dataItem.Codice;
        @*$.ajax({
            type: "POST",
            url: "@(Url.Action("duplicaTipoElemento", "Docs"))",
            data: { codice: dataItem.Codice },
            success: function (result) {
                window.location.href = '/Docs/editTipoElemento?Codice=' + result.Codice;

            }
        });*@
        
    }
</script>

<script type="text/javascript">

    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }

      $(document).ready(function () {


                $("#AddTipoElemento").bind("click", function () {
                    $.ajax({
                        type: "POST",
                        url: "@(Url.Action("TipiElementi_Create", "Docs"))",

                        success: function (result) {
                            window.location.href = '/Docs/editTipoElemento?Codice=' + result.Codice;
                            //var myWindow = $("#window").data("kendoWindow");
                            //$("#CodTipo").val(result.Codice);
                            //myWindow.refresh({
                            //    url: "/Docs/editTipoElemento",
                            //    data: { codice: result.Codice },
                            //    type: "GET"
                            //});
                            // myWindow.open().maximize();
                        }
                    });

                     //.open();
                });

      });

        $(function () {
            $('#gridTipiElementi').on('click', '.chkApp', function () {
                 var items = {};
                 var checked = $(this).is(':checked');
                var grid = $('#gridTipiElementi').data().kendoGrid;
                    var dataItem = grid.dataItem($(this).closest('tr'));
                    dataItem.set('Write', checked);

                
             })
        });
</script>


@(Html.Kendo().Window()
                .Name("window")
    .Size("auto")
    .Title("Tipo Elemento")
    .Visible(false)
    .Actions(actions => actions.Refresh().Minimize().Maximize().Close())
    .Content("")
    .Scrollable(true)
    .Draggable(false)
    .Resizable( )
    .Modal(true)
)

<script>
    function window_open() {
        // Handle the open event.
    }

    function window_close() {
        // Handle the close event.
    }
</script>