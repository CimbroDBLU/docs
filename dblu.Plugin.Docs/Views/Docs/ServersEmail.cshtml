@model dblu.Docs.Models.EmailServer
@using dblu.Docs.Classi
@using dblu.Portale.Plugin.Docs.ViewModels
@using dblu.Portale.Core.UI
@using Kendo.Mvc.UI
@addTagHelper *, Kendo.Mvc

@{
    var Title = "Server eMail";
}


@(await Html.RenderComponentAsync<PageTitle>(RenderMode.Server,  new { nTitle = Title}))

<div class="e-card">
    <div class="e-card-header">
        <div class="e-card-header-caption">
            <div class="e-card-header-title">
                @Title
            </div>
        </div>
    </div>
    <div class="e-card-separator"></div>
    <div class="e-card-content">

        <!-- Main content -->
        <section class="content">
            <div class="row">
                <div class="col-xs-12">
                    <div class="box box-solid box-default">
                        <div class="box-header with-border">
                            @*     <h3 class="box-title">Categorie</h3>*@
                            @Html.Hidden("Nome")
                        </div>
                        <div class="box-body">

                            @(Html.Kendo().Grid<dblu.Docs.Models.EmailServer>()
            .Name("gridEmailServer")
            .Columns(columns =>
            {
                columns.Bound(p => p.Nome).Width(100);
                columns.Bound(p => p.Email).Width(300);
                columns.Bound(p => p.Cartella).Width(200);
                columns.Bound(p => p.CartellaArchivio).Width(200);
                columns.Bound(p => p.NomeServerInUscita).Width(200);
                columns.Bound(p => p.TipoRecord).Hidden();
                columns.Command(command => command.Custom("Modifica").Click("showEditor")).Width(150);
                columns.Command(command => command.Destroy().Text("Elimina")).Width(150);

            })
            .ToolBar(toolbar =>
                {
                    toolbar.Custom().Text("Nuovo Elemento").HtmlAttributes(new { id = "AddServer" });
                })
            //.ToolBar(toolbar => toolbar.Create())
            .Editable(editable => editable.Mode(GridEditMode.PopUp))
            .Pageable()
            .Sortable()
            .Scrollable()
            .Height(730)
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(20)                
                .Events(events => events.Error("error_handler"))
                .Group(groups => groups.Add(p => p.TipoRecord))
                .Model(model =>
                {
                    model.Id(p => p.Nome);
                                    })

                            .Read(read => read.Action("EmailServer_Read", "Docs"))
                            .Update(update => update.Action("EmailServer_Update", "Docs"))
                            .Destroy(update => update.Action("EmailServer_Destroy", "Docs"))
                        )
                    )
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>






<script type="text/javascript">
    $(function () {
        // The Name() of the Window is used to get its client-side instance.
        var dialog = $("#window").data("kendoWindow");
    });
</script>

<script type="text/javascript">

    function showEditor(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = '/Docs/editServerEmail?Nome=' + dataItem.Nome + '&Tipo=' + dataItem.TipoRecord;


        //$("#EmailServer").val(dataItem.Nome);
        //var myWindow = $("#window").data("kendoWindow");
        //myWindow.refresh({
        //    url: "/Docs/editServerEmail",
        //    data: { Nome: dataItem.Nome },
        //    type: "Post"
        //});
        //myWindow.open().maximize();
    }


    function Edit(e) {
        e.preventDefault();
        var item = this.dataItem($(e.currentTarget).closest("tr"));
        // window.location.href = '/Management/Utente?id=' + item.UserId;
        $("#EmailServer").val(dataItem.Nome);
        var myWindow = $("#window").data("kendoWindow");
        myWindow.refresh({
            url: "/Docs/editServerEmail",
            data: { Nome: dataItem.Nome },
            type: "Post"
        });
        myWindow.open().maximize();

    }
</script>

<script type="text/javascript">

    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
    $(document).ready(function () {

             var myWindow = $("#window");

                $("#AddServer").bind("click", function () {
                    $.ajax({
                        type: "POST",
                        url: "@(Url.Action("EmailServer_Create", "Docs"))",

                        success: function (result) {
                               window.location.href = '/Docs/editServerEmail?Nome=' + result.Nome;
                            //var myWindow = $("#window").data("kendoWindow");
                            //$("#NomeServer").val(result.Nome);
                            //myWindow.refresh({
                            //    url: "/Docs/editServerEmail",
                            //    data: { Nome: result.Nome },
                            //    type: "Post"
                            //});
                            // myWindow.open().maximize();
                        }
                    });

                     //.open();
                });
         });
</script>


@(Html.Kendo().Window()
                .Name("window")
    .Size("auto")
    .Title("Server Email")
    .Visible(false)
    .Actions(actions => actions.Refresh().Minimize().Maximize().Close())
    .Content("")
    .Scrollable(true)
    .Draggable(false)
    .Resizable()
    .Modal(true)
)

<script>
    function window_open() {
        // Handle the open event.
    }

    function window_close() {
        // Handle the close event.
    }
</script>