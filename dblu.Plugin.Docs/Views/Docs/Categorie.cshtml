@model dblu.Portale.Plugin.Docs.ViewModels.CategorieViewModel
@using dblu.Docs.Classi

@using dblu.Portale.Plugin.Docs.ViewModels
@using Kendo.Mvc.UI
@addTagHelper *, Kendo.Mvc
@{
    ViewData["Title"] = "Categorie";
}

<section class="content-header">
    <h1>
        Categorie
    </h1>
    <ol class="breadcrumb">
        <li><a href="/Index"><i class="fa fa-dashboard"></i>Home</a></li>
        <li><a href="/Docs/Categorie">Categorie</a></li>
    </ol>
</section>


<!-- Main content -->
<section class="content">
    <div>
        @(Html.Kendo().Dialog()
        .Name("dialogConferma")
        .ButtonLayout("normal")
        .Title("Attenzione")
        .Content("<p>Confermi di eliminare la Categoria?<p>")
        .Width(400)
        .Modal(false)
        .Closable(true)
        .Visible(false)
        .Actions(actions =>
        {
            actions.Add().Text("Cancel").Action("onAnnullaEliminazione");
            actions.Add().Text("Ok").Primary(true).Action("onConfermaEliminazione");
        })
    )
    </div>
    <div class="row">
        <div class="col-xs-12">
            <div class="box box-solid box-default">
                <div class="box-header with-border">
                    @*     <h3 class="box-title">Categorie</h3>*@
                    @Html.Hidden("CodCategoria")
                </div>
                <div class="box-body">

                    @(Html.Kendo().Grid<dblu.Portale.Plugin.Docs.ViewModels.CategorieViewModel>()
            .Name("gridCategorie")
            .Columns(columns =>
            {
                columns.Bound(p => p.Codice).Width(100);
                columns.Bound(p => p.Descrizione).Width(500);
                columns.Bound(p => p.ViewAttributi).Width(200);
                columns.Command(command =>
                {
                    command.Custom("Modifica").Click("showEditor");
                    command.Custom("Elimina").Click("eliminaCategoria");
                    command.Custom("Duplica").Click("duplica");
                }).Width(500);
            })
            .ToolBar(toolbar =>
                {
                    toolbar.Custom().Text("Nuovo Elemento").HtmlAttributes(new { id = "AddCategoria" });
                })
            //.ToolBar(toolbar => toolbar.Create())
            .Editable(editable => editable.Mode(GridEditMode.PopUp))
            .Pageable()
            .Sortable()
            .Scrollable()
            .HtmlAttributes(new { style = "height:430px, font-size:8px" })
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(20)
                .Events(events => events.Error("error_handler"))
                .Model(model =>
                {
                    model.Id(p => p.Codice);
                    model.Field(e => e.Codice).Editable(false);
                    model.Field(e => e.listaAttributi).DefaultValue(new List<Attributo>());
                })
                            //.Create(update => update.Action("Categorie_Create", "Docs"))
                            .Read(read => read.Action("Categorie_Read", "Docs"))
                            .Update(update => update.Action("Categorie_Update", "Docs"))
                            .Destroy(update => update.Action("Categorie_Destroy", "Docs"))
                        )
                    )
                </div>
            </div>
        </div>
    </div>


</section>

<script type="text/javascript">
    $(function () {
        // The Name() of the Window is used to get its client-side instance.
        var dialog = $("#window").data("kendoWindow");
    });
</script>

<script type="text/javascript">
    var codiceDel = '';

    function colonnaValorePredefinito(dato) {
        var html;
        if (dato.Tipo === 'System.DateTime') {
            if (dato.ValorePredefinito == null) html = kendo.format("<input type='text' class='chkbxW' disabled value='aaaa-mm-gg' > ");
            else html = kendo.format("<input type='date' class='chkbxW' disabled value=" + dato.ValorePredefinito + " > ");
        }
        if (dato.Tipo === 'System.Boolean') {
            if (dato.ValorePredefinito == null || dato.ValorePredefinito == "0") {
                html = kendo.format("<input type='checkbox' class='chkbxW' disabled>");
            } else {
                html = kendo.format("<input type='checkbox' class='chkbxW' disabled checked>");
            }
        }
        if (dato.Tipo === 'System.Double' || dato.Tipo === 'System.Int32') {
            if (dato.ValorePredefinito == null) html = kendo.format("<input type='text' class='chkbxW' disabled value='' > ");
            else html = kendo.format(" <input type='number' class='chkbxW' disabled value=" + dato.ValorePredefinito + " > ");

        }
        if (dato.Tipo === 'System.String') {
            if (dato.ValorePredefinito == null) html = kendo.format("<input type='text' class='chkbxW' disabled value='' > ");
            else html = kendo.format("<input type='text' class='chkbxW' disabled value=" + dato.ValorePredefinito + " > ");
        }
        if (dato.Tipo === 'System.Object') {
            if (dato.ValorePredefinito == null) html = kendo.format("<input type='text' class='chkbxW' disabled value='' > ");
            else html = kendo.format("<input type='text' class='chkbxW' disabled value=" + dato.ValorePredefinito + " > ");
        }

        return html;
    }
    function showEditor(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        $("#CodCategoria").val(dataItem.Codice);
        var myWindow = $("#window").data("kendoWindow");
        myWindow.refresh({
            url: "/Docs/editCategoria",
            data: { codice: dataItem.Codice },
            type: "Post"
        });
        myWindow.open().maximize();
    }
    /* button grid elimina catgoria 
     * chaima la funzione su DocsController per vedere se ci sono fascicoli collegati
     * se non ci sono apre il dialog di conferma eliminazione
     **/
    function eliminaCategoria(e) {
    
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var cod = dataItem.Codice;
        codiceDel = cod;
        var obj2 = {
            Tipo: "Categoria",
            Cod: cod
        };

         $.ajax({
            type: "POST",
            url: "@(Url.Action("checkIfDeletable", "Docs"))",
            data: obj2,
            success: function (result) {
                if (!result) alert("Impossibile eliminare: presenti fascicoli associati");
                else {
                    $("#dialogConferma").data("kendoDialog").open();
                }

            }
        });
    }
    function onAnnullaEliminazione() {
        $("#dialogConferma").data("kendoDialog").close();
    }
    //eliminazione categoria
    function onConfermaEliminazione() {
         $.ajax({
            type: "POST",
            url: "@(Url.Action("Categorie_Destroy", "Docs"))",
            data: {codice: codiceDel},
            success: function (result) {
                $("#gridCategorie").data("kendoGrid").dataSource.read();
            }
          });
        $("#gridCategorie").data("kendoGrid").dataSource.read();
    }
      function duplica(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //window.location.href = '/Docs/duplicaCategoria?Codice=' + dataItem.Codice;

        var myWindow = $("#window").data("kendoWindow");
        myWindow.refresh({
            url: "/Docs/duplicaCategoria",
            data: { codice: dataItem.Codice },
            type: "Post"
        });
        myWindow.open().maximize();


    }
</script>

<script type="text/javascript">

    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
    $(document).ready(function () {

             var myWindow = $("#window");

                $("#AddCategoria").bind("click", function () {
                    $.ajax({
                        type: "POST",
                        url: "@(Url.Action("Categorie_Create", "Docs"))",

                        success: function (result) {

                            var myWindow = $("#window").data("kendoWindow");
                            $("#CodCategoria").val(result.Codice);
                            myWindow.refresh({
                                url: "/Docs/editCategoria",
                                data: { codice: result.Codice },
                                type: "Post"
                            });
                             myWindow.open().maximize();
                        }
                    });

                     //.open();
                });
         });
</script>


@(Html.Kendo().Window()
                .Name("window")
    .Size("auto")
    .Title("Categoria")
    .Visible(false)
    .Actions(actions => actions.Refresh().Minimize().Maximize().Close())
    .Content("")
    .Scrollable(true)
    .Draggable(false)
    .Resizable()
    .Modal(true)
)

<script>
    function window_open() {
        // Handle the open event.
    }

    function window_close() {
        // Handle the close event.
    }
</script>